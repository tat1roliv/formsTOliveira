{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ContentFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"accepted\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContentFormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \"required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContentFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \"el correo tiene un formato incorrecto\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ContentFormComponent {\n  constructor() {\n    let controles = {\n      name_: new FormControl('', [Validators.required]),\n      lastName_: new FormControl('', [Validators.required]),\n      email_: new FormControl('', [Validators.required, Validators.email])\n    };\n    this.formSubscription = new FormGroup(controles);\n  }\n  handleSubscription() {\n    console.log('login', this.formSubscription);\n  }\n}\nContentFormComponent.ɵfac = function ContentFormComponent_Factory(t) {\n  return new (t || ContentFormComponent)();\n};\nContentFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContentFormComponent,\n  selectors: [[\"app-content-form\"]],\n  decls: 19,\n  vars: 5,\n  consts: [[1, \"ic-dynamic-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-2\"], [\"for\", \"firstname-input\", 1, \"mb-1\"], [\"value\", \"\", \"type\", \"text\", \"id\", \"firstname-input\", \"name\", \"firstname-input\", \"placeholder\", \"*Name\", \"formControlName\", \"name_\", 1, \"form-control\"], [\"for\", \"lastname-input\", 1, \"mb-1\"], [\"value\", \"\", \"type\", \"text\", \"id\", \"lastname-input\", \"name\", \"lastname-input\", \"placeholder\", \"*Last name\", \"formControlName\", \"lastName_\", 1, \"form-control\"], [\"for\", \"email-input\", 1, \"mb-1\"], [\"value\", \"\", \"type\", \"text\", \"id\", \"email-input\", \"name\", \"email-input\", \"placeholder\", \"*Email\", \"formControlName\", \"email_\", 1, \"form-control\"], [\"class\", \"valid\", 4, \"ngIf\"], [\"class\", \"invalid\", 4, \"ngIf\"], [1, \"mt-4\", \"mb-2\"], [\"type\", \"submit\", 1, \"btn\", \"w-100\", 3, \"disabled\"], [1, \"valid\"], [1, \"invalid\"]],\n  template: function ContentFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ContentFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.handleSubscription();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Last name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵtemplate(13, ContentFormComponent_div_13_Template, 2, 0, \"div\", 8);\n      i0.ɵɵtemplate(14, ContentFormComponent_div_14_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(15, ContentFormComponent_div_15_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"button\", 11);\n      i0.ɵɵtext(18, \"Send\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formSubscription);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.formSubscription.controls[\"correo\"].dirty && ctx.formSubscription.controls[\"email_\"].valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formSubscription.controls[\"correo\"].dirty && (ctx.formSubscription.controls[\"email_\"].errors == null ? null : ctx.formSubscription.controls[\"email_\"].errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formSubscription.controls[\"correo\"].dirty && (ctx.formSubscription.controls[\"email_\"].errors == null ? null : ctx.formSubscription.controls[\"email_\"].errors[\"email\"]));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.formSubscription.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".ic-dynamic-form[_ngcontent-%COMP%]{\\r\\n  background-color: #fff;\\r\\n  padding: 22px 8px 20px 8px!important;\\r\\n  border-radius: 0 0 8px 8px;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%] {\\r\\n  font-size: 16px;\\r\\n  line-height: 22px;\\r\\n  font-weight: 500;\\r\\n  cursor: pointer;\\r\\n  box-shadow: none;\\r\\n  border-radius: 8px;\\r\\n  padding: 15px 24px;\\r\\n  letter-spacing: 0.5px;\\r\\n  width: 100%;\\r\\n  background-color:#3366FF;\\r\\n  border:none;\\r\\n  color:#fff;\\r\\n}\\r\\n\\r\\n.valid[_ngcontent-%COMP%] {\\r\\n  color:#3366FF;\\r\\n}\\r\\n\\r\\n.invalid[_ngcontent-%COMP%]{\\r\\n  color:tomato;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb250ZW50LWZvcm0vY29udGVudC1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsb0NBQW9DO0VBQ3BDLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsV0FBVztFQUNYLHdCQUF3QjtFQUN4QixXQUFXO0VBQ1gsVUFBVTtBQUNaOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmljLWR5bmFtaWMtZm9ybXtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHBhZGRpbmc6IDIycHggOHB4IDIwcHggOHB4IWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiAwIDAgOHB4IDhweDtcclxufVxyXG5cclxuLmJ0biB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIHBhZGRpbmc6IDE1cHggMjRweDtcclxuICBsZXR0ZXItc3BhY2luZzogMC41cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjojMzM2NkZGO1xyXG4gIGJvcmRlcjpub25lO1xyXG4gIGNvbG9yOiNmZmY7XHJcbn1cclxuXHJcbi52YWxpZCB7XHJcbiAgY29sb3I6IzMzNjZGRjtcclxufVxyXG5cclxuLmludmFsaWR7XHJcbiAgY29sb3I6dG9tYXRvO1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAGC,UAAU,QAAO,gBAAgB;;;;;;ICY7DC,+BAAmH;IAAAA,wBAAQ;IAAAA,iBAAM;;;;;IACjIA,+BAAoI;IAAAA,8BAAc;IAAAA,iBAAM;;;;;IACxJA,+BAAgI;IAAAA,qDAAqC;IAAAA,iBAAM;;;ADPjL,OAAM,MAAOC,oBAAoB;EAI/BC;IACE,IAAIC,SAAS,GAAQ;MACnBC,KAAK,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAAEE,UAAU,CAACM,QAAQ,CAAG,CAAC;MACpDC,SAAS,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAAEE,UAAU,CAACM,QAAQ,CAAG,CAAC;MACxDE,MAAM,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAAEE,UAAU,CAACM,QAAQ,EAAGN,UAAU,CAACS,KAAK,CAAG;KACxE;IAED,IAAI,CAACC,gBAAgB,GAAG,IAAIX,SAAS,CAACK,SAAS,CAAC;EAElD;EAEAO,kBAAkB;IAChBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACH,gBAAgB,CAAC;EAC7C;;AAjBWR,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRjCjB,+BAAgG;MAAlCA;QAAA,OAAYkB,wBAAoB;MAAA,EAAC;MAC7FlB,8BAAkB;MAC4BA,qBAAK;MAAAA,iBAAQ;MACvDA,2BAAyI;MAC7IA,iBAAM;MACNA,8BAAkB;MACyBA,0BAAU;MAAAA,iBAAQ;MAC3DA,2BAAgJ;MAClJA,iBAAM;MACNA,8BAAkB;MACwBA,uBAAM;MAAAA,iBAAQ;MACpDA,4BAAmI;MAEnIA,uEAAiI;MACjIA,uEAAwJ;MACxJA,uEAA2K;MAC/KA,iBAAM;MACNA,gCAAuB;MAC2DA,qBAAI;MAAAA,iBAAS;;;MAlBlEA,gDAA8B;MAanCA,gBAA4F;MAA5FA,qHAA4F;MAC1FA,eAA2G;MAA3GA,oMAA2G;MAC3GA,eAAwG;MAAxGA,iMAAwG;MAGtFA,eAAqC;MAArCA,uDAAqC","names":["FormControl","FormGroup","Validators","i0","ContentFormComponent","constructor","controles","name_","required","lastName_","email_","email","formSubscription","handleSubscription","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\tatio\\Documents\\GitHub\\Comision-40510-Angular\\06-forms-desafio\\formsTOliveira\\src\\app\\components\\content-form\\content-form.component.ts","C:\\Users\\tatio\\Documents\\GitHub\\Comision-40510-Angular\\06-forms-desafio\\formsTOliveira\\src\\app\\components\\content-form\\content-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup , Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-content-form',\n  templateUrl: './content-form.component.html',\n  styleUrls: ['./content-form.component.css']\n})\nexport class ContentFormComponent {\n\n  formSubscription: FormGroup;\n\n  constructor(){\n    let controles: any = {\n      name_: new FormControl('', [ Validators.required  ]),\n      lastName_: new FormControl('', [ Validators.required  ]),\n      email_: new FormControl('', [ Validators.required , Validators.email  ]),\n    }\n\n    this.formSubscription = new FormGroup(controles);\n\n  }\n\n  handleSubscription(){\n    console.log('login', this.formSubscription);\n  }\n\n}\n","<form class=\"ic-dynamic-form\"  [formGroup]=\"formSubscription\" (ngSubmit)=\"handleSubscription()\">\n  <div class=\"mb-2\">\n      <label class=\"mb-1\" for=\"firstname-input\">Name:</label>\n      <input value=\"\" type=\"text\" id=\"firstname-input\" name=\"firstname-input\" class=\"form-control\" placeholder=\"*Name\" formControlName=\"name_\">\n  </div>\n  <div class=\"mb-2\">\n    <label class=\"mb-1\" for=\"lastname-input\">Last name:</label>\n    <input value=\"\" type=\"text\" id=\"lastname-input\" name=\"lastname-input\" class=\"form-control\" placeholder=\"*Last name\" formControlName=\"lastName_\">\n  </div>\n  <div class=\"mb-2\">\n      <label class=\"mb-1\" for=\"email-input\">Email:</label>\n      <input value=\"\" type=\"text\" id=\"email-input\" name=\"email-input\" class=\"form-control\" placeholder=\"*Email\" formControlName=\"email_\">\n      <!--check-->\n      <div class=\"valid\" *ngIf=\"formSubscription.controls['correo'].dirty && formSubscription.controls['email_'].valid\" >accepted</div>\n      <div class=\"invalid\" *ngIf=\"formSubscription.controls['correo'].dirty && formSubscription.controls['email_'].errors?.['required']\" >required field</div>\n      <div class=\"invalid\" *ngIf=\"formSubscription.controls['correo'].dirty && formSubscription.controls['email_'].errors?.['email']\">el correo tiene un formato incorrecto</div>\n  </div>\n  <div class=\"mt-4 mb-2\">\n      <button type=\"submit\" class=\"btn w-100\" [disabled]=\"formSubscription.invalid\">Send</button>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}